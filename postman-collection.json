{
	"info": {
		"_postman_id": "37262e21-7998-4daa-9150-f8983d8bac7e",
		"name": "SANDBOX_STET_V2_COLLECTION (latest)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ACCOUNT INFORMATION API (AISP)",
			"item": [
				{
					"name": "Step 1 - Authenticate - Required for AISP APIs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5c12015-a0df-4ba5-a178-e5ed7c1c60bd",
								"exec": [
									"tests[\"Access token is present\"] = responseBody.has(\"access_token\");",
									"",
									"if (responseBody.has(\"access_token\")) {",
									"    var data = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"bearer_token\", data.data.access_token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{username}}",
									"description": "The username from the test data",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"description": "The matching password from the test data",
									"type": "text"
								},
								{
									"key": "next",
									"value": "",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "",
									"type": "text",
									"disabled": true
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_auth}}/authenticate?client_id={{client_id}}&brand={{brand}}",
							"host": [
								"{{sandbox_auth}}"
							],
							"path": [
								"authenticate"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 2 - Get authorization code - Required for AISP APIs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e5a8a73-cc1f-44a4-b9f5-3f8beb8e4232",
								"exec": [
									"tests[\"Redirect is OK\"] = postman.getResponseHeader(\"location\")",
									"",
									"if (postman.getResponseHeader(\"location\")) {",
									"var loc = postman.getResponseHeader(\"location\").split('&')[0];",
									"postman.setEnvironmentVariable(\"authorization_code\", loc.split('=')[1])",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Openbank-Organization",
								"value": "{{org_container_name}}",
								"description": "(optional/deprecated) Container name",
								"disabled": true
							},
							{
								"key": "X-Openbank-Stet-Version",
								"value": "{{api_version}}",
								"description": "(required) API version in used",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "redirect_uri",
									"value": "{{redirect_url}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "aisp",
									"type": "text"
								},
								{
									"key": "response_type",
									"value": "code",
									"type": "text"
								},
								{
									"key": "accounts",
									"value": "{{from_account}}",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_auth}}/authorize?client_id={{client_id}}&state={{state}}&brand={{brand}}",
							"host": [
								"{{sandbox_auth}}"
							],
							"path": [
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "state",
									"value": "{{state}}"
								},
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 3 - Get Token - Required for AISP APIs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc37f6b3-0f84-4199-aaaa-b126e2e11f79",
								"exec": [
									"tests[\"Access token is present\"] = responseBody.has(\"access_token\");",
									"tests[\"Refresh token is present\"] = responseBody.has(\"refresh_token\");",
									"",
									"if (responseBody.has(\"access_token\")) {",
									"    var data = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"access_token_authorization_grant\", data.access_token);",
									"}",
									"",
									"if (responseBody.has(\"refresh_token\")) {",
									"    var data = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"access_token_refresh_token\", data.refresh_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Openbank-Organization",
								"value": "{{org_container_name}}",
								"description": "(required) Container name",
								"disabled": true
							},
							{
								"key": "X-Openbank-Stet-Version",
								"value": "{{api_version}}",
								"description": "(required) API version in used",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_url}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "aisp",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{authorization_code}}",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_auth}}/token",
							"host": [
								"{{sandbox_auth}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieval of the PSU accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5438390c-4d9e-48b2-b796-a54da53f1c8e",
								"exec": [
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"self ref should contain all request params\", function () {",
									"    var data = JSON.parse(responseBody);",
									"    var br = pm.request.url.query.get('brand');",
									"    pm.expect(data._links.self.href).to.eql(`/psd2/v2/accounts?brand=${br}&pageSize=25&index=1`);",
									"})",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_authorization_grant}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>",
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate."
							},
							{
								"key": "X-Request-ID",
								"value": "<X-Request-ID>",
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n"
							},
							{
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Date",
								"value": "<PSU-Date>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Referer",
								"value": "<PSU-Referer>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept",
								"value": "<PSU-Accept>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "x-openbank-scenario",
								"value": "6d7b43d4-f713-41c1-a968-0a025805c058",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/accounts?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"accounts"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieval of an account balances",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cd241a9-740b-4dc7-93f3-b309c56956ac",
								"exec": [
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_authorization_grant}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>",
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate."
							},
							{
								"key": "X-Request-ID",
								"value": "<X-Request-ID>",
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n"
							},
							{
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Date",
								"value": "<PSU-Date>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Referer",
								"value": "<PSU-Referer>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept",
								"value": "<PSU-Accept>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>",
								"description": "(optional)",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/accounts/{{from_account}}EUR/balances?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"accounts",
								"{{from_account}}EUR",
								"balances"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieval of an account transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea0110e0-7684-4a89-8a10-672e2bc19138",
								"exec": [
									"pm.test(\"Response code is nok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_authorization_grant}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>",
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate."
							},
							{
								"key": "X-Request-ID",
								"value": "<X-Request-ID>",
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n"
							},
							{
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Date",
								"value": "<PSU-Date>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Referer",
								"value": "<PSU-Referer>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept",
								"value": "<PSU-Accept>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>",
								"description": "(optional)",
								"disabled": true
							},
							{
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>",
								"description": "(optional)",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/accounts/{{from_account}}EUR/transactions?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"accounts",
								"{{from_account}}EUR",
								"transactions"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PAYMENT INITIATION API (PISP)",
			"item": [
				{
					"name": "Step 1 - Get Token - Required for PISP APIs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae00cbfc-62ab-42d9-90cd-8b98ce63e6f4",
								"exec": [
									"tests[\"Access token is present\"] = responseBody.has(\"access_token\");",
									"",
									"if (responseBody.has(\"access_token\")) {",
									"    var data = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"access_token_client_credentials\", data.access_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_url}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "pisp",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_auth}}/token",
							"host": [
								"{{sandbox_auth}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "SEPA Payment request initiation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66ba5b72-d3bc-4321-943b-d7b7547ea5f7",
								"exec": [
									"tests[\"location header is present\"] = postman.getResponseHeader(\"location\") !== null",
									"",
									"if (postman.getResponseHeader(\"location\") !== null)",
									"var data = postman.getResponseHeader(\"location\")",
									"postman.setEnvironmentVariable(\"paymentRequestResourceId\", data.split('/')[4])",
									"",
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_client_credentials}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate.",
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>"
							},
							{
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n",
								"key": "X-Request-ID",
								"value": "<X-Request-ID>"
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Date",
								"value": "<PSU-Date>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Referer",
								"value": "<PSU-Referer>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept",
								"value": "<PSU-Accept>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"paymentInformationId\": \"MyPmtInfId\",\n    \"creationDateTime\": \"2020-04-17T10:20:42+02:00\",\n    \"requestedExecutionDate\": \"{{tomorrow}}\",\n    \"numberOfTransactions\": 1,\n    \"initiatingParty\": {\n        \"name\": \"MyPreferedPisp\",\n        \"postalAddress\": {\n            \"country\": \"FR\",\n            \"addressLine\": [\n                \"18 rue de la DSP2\",\n                \"75008 PARIS\"\n            ]\n        },\n        \"organisationId\": {\n            \"identification\": \"12FR5\",\n            \"schemeName\": \"CPAN\",\n            \"issuer\": \"ACPR\"\n        }\n    },\n    \"paymentTypeInformation\": {\n        \"serviceLevel\": \"SEPA\"\n    },\n    \"debtor\": {\n        \"name\": \"Isaac Newton\",\n        \"postalAddress\": {\n            \"country\": \"FR\",\n            \"addressLine\": [\n                \"18 rue de la DSP2\",\n                \"75008 PARIS\"\n            ]\n        },\n        \"privateId\": {\n            \"identification\": \"FD37G\",\n            \"schemeName\": \"BANK\",\n            \"issuer\": \"BICXYYTTZZZ\"\n        }\n    },\n    \"debtorAccount\": {\n        \"iban\": \"{{from_account}}\"\n    },\n    \"beneficiary\": {\n        \"creditor\": {\n            \"name\": \"Thomas Edison\",\n            \"postalAddress\": {\n                \"country\": \"FR\",\n                \"addressLine\": [\n                    \"18 rue de la DSP2\",\n                    \"75008 PARIS\"\n                ]\n            },\n            \"organisationId\": {\n                \"identification\": \"852126789\",\n                \"schemeName\": \"SREN\",\n                \"issuer\": \"FR\"\n            }\n        },\n        \"creditorAccount\": {\n            \"iban\": \"{{to_account}}\"\n        }\n    },\n    \"creditTransferTransaction\": [\n        {\n            \"paymentId\": {\n                \"instructionId\": \"MyInstrId\",\n                \"endToEndId\": \"MyEndToEndId\"\n            },\n            \"instructedAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": \"1.50\"\n            },\n            \"remittanceInformation\": {\n                \"structured\": [\n                    {\n                        \"creditorReferenceInformation\": {\n                            \"type\": {\n                                \"code\": \"SCOR\",\n                                \"issuer\": \"BBA\"\n                            },\n                            \"reference\": \"123456789123\"\n                        }\n                    }\n                ]\n            }\n        }\n    ],\n    \"supplementaryData\": {\n        \"acceptedAuthenticationApproach\": [\n            \"REDIRECT\",\n            \"DECOUPLED\"\n        ],\n        \"successfulReportUrl\": \"{{paymentRequestSucecssRedirect}}\",\n        \"unsuccessfulReportUrl\": \"{{paymentRequestErrorRedirect}}\"\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/payment-requests?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"payment-requests"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "International Payment request initiation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa80cb20-c259-4cac-8e1a-826cb33b09c1",
								"exec": [
									"tests[\"location header is present\"] = postman.getResponseHeader(\"location\") !== null",
									"",
									"if (postman.getResponseHeader(\"location\") !== null)",
									"var data = postman.getResponseHeader(\"location\")",
									"postman.setEnvironmentVariable(\"paymentRequestResourceId\", data.split('/')[4])",
									"var payload = JSON.parse(request.data);",
									"postman.setEnvironmentVariable(\"requestedExecutionDate\", payload.requestedExecutionDate);",
									"",
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9f89ad22-9476-4d27-a24e-65391ac1d74a",
								"exec": [
									"var randomBBAN = '' + _.random(10000000000000, 99999999999999)",
									"var randomIBAN = 'BG' + randomBBAN",
									"pm.environment.set(\"randomBBAN\", randomBBAN)",
									"pm.environment.set(\"randomIBAN\", randomIBAN)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_client_credentials}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate.",
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>"
							},
							{
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n",
								"key": "X-Request-ID",
								"value": "<X-Request-ID>"
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Date",
								"value": "<PSU-Date>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Referer",
								"value": "<PSU-Referer>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept",
								"value": "<PSU-Accept>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"paymentInformationId\": \"MyPmtInfId\",\n    \"creationDateTime\": \"2019-03-31T13:25:22\",\n    \"requestedExecutionDate\": \"2018-12-10\",\n    \"numberOfTransactions\": 1,\n    \"initiatingParty\": {\n        \"name\": \"MyPreferedPisp\",\n        \"postalAddress\": {\n            \"country\": \"FR\",\n            \"addressLine\": [\n                \"18 rue de la DSP2\",\n                \"75008 PARIS\"\n            ]\n        },\n        \"organisationId\": {\n            \"identification\": \"12FR5\",\n            \"schemeName\": \"CPAN\",\n            \"issuer\": \"ACPR\"\n        }\n    },\n    \"paymentTypeInformation\": {\n        \"serviceLevel\": \"\"\n    },\n    \"debtor\": {\n        \"name\": \"Isaac Newton\",\n        \"postalAddress\": {\n            \"country\": \"FR\",\n            \"addressLine\": [\n                \"18 rue de la DSP2\",\n                \"75008 PARIS\"\n            ]\n        },\n        \"privateId\": {\n            \"identification\": \"FD37G\",\n            \"schemeName\": \"BANK\",\n            \"issuer\": \"BICXYYTTZZZ\"\n        }\n    },\n    \"debtorAccount\": {\n        \"iban\": \"{{from_account}}\",\n        \"currency\": \"EUR\"\n    },\n    \"beneficiary\": {\n        \"creditor\": {\n            \"name\": \"Thomas Edison\",\n            \"postalAddress\": {\n                \"country\": \"FR\"\n            },\n            \"organisationId\": {\n                \"identification\": \"852126789\",\n                \"schemeName\": \"SREN\",\n                \"issuer\": \"FR\"\n            }\n        },\n        \"creditorAccount\": {\n            \"other\": {\n                \"identification\": \"{{randomBBAN}}\",\n                \"schemeName\": \"BBAN\"\n            }\n        },\n        \"creditorAgent\": {\n            \"name\": \"BNP\",\n            \"postalAddress\": {\n                \"country\": \"Belgium\",\n                \"townName\": \"Brussels\"\n            }\n        }\n    },\n    \"creditTransferTransaction\": [\n        {\n            \"paymentId\": {\n                \"instructionId\": \"MyInstrId\",\n                \"endToEndId\": \"MyEndToEndId\"\n            },\n            \"instructedAmount\": {\n                \"currency\": \"USD\",\n                \"amount\": \"1.50\"\n            },\n            \"remittanceInformation\": {\n                \"structured\": [\n                    {\n                        \"creditorReferenceInformation\": {\n                            \"type\": {\n                                \"code\": \"SCOR\",\n                                \"issuer\": \"BBA\"\n                            },\n                            \"reference\": \"123456789123\"\n                        }\n                    }\n                ]\n            }\n        }\n    ],\n    \"supplementaryData\": {\n        \"acceptedAuthenticationApproach\": [\n            \"REDIRECT\",\n            \"DECOUPLED\"\n        ],\n        \"successfulReportUrl\": \"{{paymentRequestSucecssRedirect}}\",\n        \"unsuccessfulReportUrl\": \"{{paymentRequestErrorRedirect}}\"\n    }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/payment-requests?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"payment-requests"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Future Payment request initiation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55ead3e8-70dc-4681-a74d-9ceb34d11c70",
								"exec": [
									"tests[\"location header is present\"] = !!postman.getResponseHeader(\"location\")",
									"",
									"var data = postman.getResponseHeader(\"location\")",
									"console.log('location = ' , data)",
									"postman.setEnvironmentVariable(\"paymentRequestResourceId\", data.split('/')[4])",
									"var payload = JSON.parse(request.data);",
									"postman.setEnvironmentVariable(\"requestedExecutionDate\", payload.requestedExecutionDate);",
									"",
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "35acba66-b70e-4d3c-8035-e6721937daeb",
								"exec": [
									"var moment = require('moment')",
									"pm.environment.set(\"nextWeek\", moment().add(1, 'week').format())",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_client_credentials}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(required) Container name",
								"key": "X-Openbank-Organization",
								"value": "{{org_container_name}}"
							},
							{
								"description": "(required) API version in used",
								"key": "X-Openbank-Stet-Version",
								"value": "{{api_version}}"
							},
							{
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate.",
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>"
							},
							{
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n",
								"key": "X-Request-ID",
								"value": "<X-Request-ID>"
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>"
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>"
							},
							{
								"description": "(optional)",
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Date",
								"value": "<PSU-Date>"
							},
							{
								"description": "(optional)",
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>"
							},
							{
								"description": "(optional)",
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Referer",
								"value": "<PSU-Referer>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept",
								"value": "<PSU-Accept>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"paymentInformationId\": \"MyPmtInfId\",\n  \"creationDateTime\": \"2019-03-31T13:25:22\",\n  \"requestedExecutionDate\": \"{{oneYearMax}}\",\n  \"numberOfTransactions\": 1,\n  \"initiatingParty\": {\n    \"name\": \"MyPreferedPisp\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    },\n    \"organisationId\": {\n      \"identification\": \"12FR5\",\n      \"schemeName\": \"CPAN\",\n      \"issuer\": \"ACPR\"\n    }\n  },\n  \"paymentTypeInformation\": {\n    \"serviceLevel\": \"SEPA\"\n  },\n  \"debtor\": {\n    \"name\": \"Isaac Newton\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    },\n    \"privateId\": {\n      \"identification\": \"FD37G\",\n      \"schemeName\": \"BANK\",\n      \"issuer\": \"BICXYYTTZZZ\"\n    }\n  },\n  \"debtorAccount\": {\n  \t\"iban\": \"{{from_account}}\"\n  },\n  \"beneficiary\": {\n    \"creditor\": {\n      \"name\": \"Thomas Edison\",\n      \"postalAddress\": {\n        \"country\": \"FR\",\n        \"addressLine\": [\n          \"18 rue de la DSP2\",\n          \"75008 PARIS\"\n        ]\n      },\n      \"organisationId\": {\n        \"identification\": \"852126789\",\n        \"schemeName\": \"SREN\",\n        \"issuer\": \"FR\"\n      }\n    },\n    \"creditorAccount\": {\n      \"iban\": \"{{to_account}}\"\n    }\n  },\n  \"creditTransferTransaction\": [\n    {\n      \"paymentId\": {\n        \"instructionId\": \"MyInstrId\",\n        \"endToEndId\": \"MyEndToEndId\"\n      },\n      \"instructedAmount\": {\n        \"currency\": \"EUR\",\n        \"amount\": \"1.50\"\n      }\n    }\n  ],\n  \"supplementaryData\": {\n    \"acceptedAuthenticationApproach\": [\n      \"REDIRECT\",\n      \"DECOUPLED\"\n    ],\n    \"successfulReportUrl\": \"http://myPisp/PaymentSuccess\",\n    \"unsuccessfulReportUrl\": \"http://myPisp/PaymentFailure\"\n  }\n}\n",
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/payment-requests?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"payment-requests"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Standing Order Payment request initiation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4768a34-6934-4232-af97-a797d67694f4",
								"exec": [
									"tests[\"location header is present\"] = postman.getResponseHeader(\"location\") !== null",
									"",
									"if (postman.getResponseHeader(\"location\") !== null)",
									"var data = postman.getResponseHeader(\"location\")",
									"postman.setEnvironmentVariable(\"paymentRequestResourceId\", data.split('/')[4])",
									"var payload = JSON.parse(request.data);",
									"postman.setEnvironmentVariable(\"requestedExecutionDate\", payload.requestedExecutionDate);",
									"",
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "07f4c75c-c0b3-4d50-b63d-21be30d64469",
								"exec": [
									"var moment = require('moment')",
									"var reqDate = moment().add(3, 'days')",
									"pm.environment.set('reqDate', reqDate.format())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_client_credentials}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(required) Container name",
								"key": "X-Openbank-Organization",
								"value": "{{org_container_name}}"
							},
							{
								"description": "(required) API version in used",
								"key": "X-Openbank-Stet-Version",
								"value": "{{api_version}}"
							},
							{
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate.",
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>"
							},
							{
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n",
								"key": "X-Request-ID",
								"value": "<X-Request-ID>"
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>"
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>"
							},
							{
								"description": "(optional)",
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Date",
								"value": "<PSU-Date>"
							},
							{
								"description": "(optional)",
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>"
							},
							{
								"description": "(optional)",
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Referer",
								"value": "<PSU-Referer>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept",
								"value": "<PSU-Accept>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>"
							},
							{
								"description": "(optional)",
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"paymentInformationId\": \"MyPmtInfId\",\n  \"creationDateTime\": \"2019-03-31T13:25:22\",\n  \"numberOfTransactions\": 1,\n  \"initiatingParty\": {\n    \"name\": \"MyPreferedPisp\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    },\n    \"organisationId\": {\n      \"identification\": \"12FR5\",\n      \"schemeName\": \"CPAN\",\n      \"issuer\": \"ACPR\"\n    }\n  },\n  \"paymentTypeInformation\": {\n    \"serviceLevel\": \"SEPA\"\n  },\n  \"debtor\": {\n    \"name\": \"Isaac Newton\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    },\n    \"privateId\": {\n      \"identification\": \"FD37G\",\n      \"schemeName\": \"BANK\",\n      \"issuer\": \"BICXYYTTZZZ\"\n    }\n  },\n  \"debtorAccount\": {\n  \t\"iban\": \"{{from_account}}\"\n  },\n  \"beneficiary\": {\n    \"creditor\": {\n      \"name\": \"Thomas Edison\",\n      \"postalAddress\": {\n        \"country\": \"FR\",\n        \"addressLine\": [\n          \"18 rue de la DSP2\",\n          \"75008 PARIS\"\n        ]\n      },\n      \"organisationId\": {\n        \"identification\": \"852126789\",\n        \"schemeName\": \"SREN\",\n        \"issuer\": \"FR\"\n      }\n    },\n    \"creditorAccount\": {\n      \"iban\": \"{{to_account}}\"\n    }\n  },\n  \"creditTransferTransaction\": [\n    {\n      \"frequency\": \"MNTH\",\n      \"dayOfExecution\": \"31\",\n      \"numberOfOccurrences\": 960,\n      \"requestedExecutionDate\": \"{{reqDate}}\",\n      \"endDate\": \"{{endDate}}\",\n      \"paymentId\": {\n        \"instructionId\": \"MyInstrId\",\n        \"endToEndId\": \"MyEndToEndId\"\n      },\n      \"instructedAmount\": {\n        \"currency\": \"EUR\",\n        \"amount\": \"2.55\"\n      },\n      \"remittanceInformation\": {\n        \"unstructured\": [\n        \t\"STO request\"\n        ]\n      }\n    }\n  ],\n  \"supplementaryData\": {\n    \"acceptedAuthenticationApproach\": [\n      \"REDIRECT\",\n      \"DECOUPLED\"\n    ],\n    \"successfulReportUrl\": \"http://myPisp/PaymentSuccess\",\n    \"unsuccessfulReportUrl\": \"http://myPisp/PaymentFailure\"\n  }\n}\n",
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/payment-requests?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"payment-requests"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Instant Payment request initiation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee5018a7-e14d-4e65-8577-8e035c75a260",
								"exec": [
									"tests[\"location header is present\"] = postman.getResponseHeader(\"location\") !== null",
									"",
									"if (postman.getResponseHeader(\"location\") !== null)",
									"var data = postman.getResponseHeader(\"location\")",
									"postman.setEnvironmentVariable(\"paymentRequestResourceId\", data.split('/')[4])",
									"",
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cab1aa2c-b0d1-4f5a-b845-677c778857cf",
								"exec": [
									"var moment = require('moment')",
									"var today = moment()",
									"pm.environment.set('today', today.format())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_client_credentials}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate.",
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>"
							},
							{
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n",
								"key": "X-Request-ID",
								"value": "<X-Request-ID>"
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Date",
								"value": "<PSU-Date>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Referer",
								"value": "<PSU-Referer>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept",
								"value": "<PSU-Accept>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"paymentInformationId\": \"MyPmtInfId\",\n  \"creationDateTime\": \"2019-03-31T13:25:22\",\n  \"requestedExecutionDate\": \"{{today}}\",\n  \"numberOfTransactions\": 1,\n  \"initiatingParty\": {\n    \"name\": \"MyPreferedPisp\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    },\n    \"organisationId\": {\n      \"identification\": \"12FR5\",\n      \"schemeName\": \"CPAN\",\n      \"issuer\": \"ACPR\"\n    }\n  },\n  \"paymentTypeInformation\": {\n    \"serviceLevel\": \"SEPA\",\n    \"localInstrument\": \"INST\"\n  },\n  \"debtor\": {\n    \"name\": \"Isaac Newton\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    },\n    \"privateId\": {\n      \"identification\": \"FD37G\",\n      \"schemeName\": \"BANK\",\n      \"issuer\": \"BICXYYTTZZZ\"\n    }\n  },\n  \"debtorAccount\": {\n  \t\"iban\": \"{{from_account}}\"\n  },\n  \"beneficiary\": {\n    \"creditor\": {\n      \"name\": \"Thomas Edison\",\n      \"postalAddress\": {\n        \"country\": \"FR\",\n        \"addressLine\": [\n          \"18 rue de la DSP2\",\n          \"75008 PARIS\"\n        ]\n      },\n      \"organisationId\": {\n        \"identification\": \"852126789\",\n        \"schemeName\": \"SREN\",\n        \"issuer\": \"FR\"\n      }\n    },\n    \"creditorAccount\": {\n      \"iban\": \"{{to_account}}\"\n    }\n  },\n  \"creditTransferTransaction\": [\n    {\n      \"paymentId\": {\n        \"instructionId\": \"MyInstrId\",\n        \"endToEndId\": \"MyEndToEndId\"\n      },\n      \"instructedAmount\": {\n        \"currency\": \"EUR\",\n        \"amount\": \"0.99\"\n      },\n      \"remittanceInformation\": {\n        \"unstructured\": [\n        \t\"requestedExecutionDate is set to {{today}} and localInstrument to 'INST'\"\n        ]\n      }\n    }\n  ],\n  \"supplementaryData\": {\n    \"acceptedAuthenticationApproach\": [\n      \"REDIRECT\",\n      \"DECOUPLED\"\n    ],\n    \"successfulReportUrl\": \"{{paymentRequestSucecssRedirect}}\",\n    \"unsuccessfulReportUrl\": \"{{paymentRequestErrorRedirect}}\"\n  }\n}\n",
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/payment-requests?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"payment-requests"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieval of a payment request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "906b4c38-c485-4cfe-ba9c-32fb14ce21da",
								"exec": [
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_client_credentials}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Openbank-Organization",
								"value": "{{org_container_name}}",
								"description": "(required) Container name",
								"disabled": true
							},
							{
								"key": "X-Openbank-Stet-Version",
								"value": "{{api_version}}",
								"description": "(required) API version in used"
							},
							{
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>",
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate."
							},
							{
								"key": "X-Request-ID",
								"value": "<X-Request-ID>",
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n"
							},
							{
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>",
								"description": "(optional)"
							},
							{
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>",
								"description": "(optional)"
							},
							{
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>",
								"description": "(optional)"
							},
							{
								"key": "PSU-Date",
								"value": "<PSU-Date>",
								"description": "(optional)"
							},
							{
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>",
								"description": "(optional)"
							},
							{
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>",
								"description": "(optional)"
							},
							{
								"key": "PSU-Referer",
								"value": "<PSU-Referer>",
								"description": "(optional)"
							},
							{
								"key": "PSU-Accept",
								"value": "<PSU-Accept>",
								"description": "(optional)"
							},
							{
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>",
								"description": "(optional)"
							},
							{
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>",
								"description": "(optional)"
							},
							{
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>",
								"description": "(optional)"
							},
							{
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>",
								"description": "(optional)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/payment-requests/{{paymentRequestResourceId}}?brand=bnppf",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"payment-requests",
								"{{paymentRequestResourceId}}"
							],
							"query": [
								{
									"key": "brand",
									"value": "bnppf"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cancellation url",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "113b77df-31a6-4df7-ab9c-836d82332d24",
								"exec": [
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"tests[\"Received link\"] = pm.expect(data).to.have.property('_links')",
									"tests[\"Received consentApproval link\"] = pm.expect(data._links).to.have.property('consentApproval')",
									"tests[\"consentApproval link has cancel\"] = pm.expect(data._links.consentApproval.href).to.contain('cancel')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_client_credentials}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "12345",
								"type": "text"
							},
							{
								"key": "Signature",
								"value": "<signature>",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"resourceId\": \"792a7f31968e49feaa7f31968ef9feaa\",\n  \"paymentInformationId\": \"MyPmtInfId\",\n  \"creationDateTime\": \"2018-03-31T13:25:22.527+02:00\",\n  \"numberOfTransactions\": 1,\n  \"initiatingParty\": {\n    \"name\": \"MyPreferedPisp\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    },\n    \"organisationId\": {\n      \"identification\": \"12FR5\",\n      \"schemeName\": \"COID\",\n      \"issuer\": \"ACPR\"\n    }\n  },\n  \"paymentTypeInformation\": {\n    \"instructionPriority\": \"HIGH\",\n    \"serviceLevel\": \"SEPA\",\n    \"localInstrument\": \"INST\",\n    \"categoryPurpose\": \"DVPM\"\n  },\n  \"debtor\": {\n    \"name\": \"MyCustomer\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    },\n    \"organisationId\": {\n      \"identification\": \"FD37G\",\n      \"schemeName\": \"BANK\",\n      \"issuer\": \"BICXYYTTZZZ\"\n    }\n  },\n  \"debtorAccount\": {\n    \"iban\": \"{{from_account}}\",\n    \"others\": {\n      \"identification\": \"12FR5\",\n      \"schemeName\": \"COID\",\n      \"issuer\": \"ACPR\"\n    }\n  },\n  \"debtorAgent\": {\n    \"bicFi\": \"GEBABEBB\",\n    \"clearingSystemMemberId\": {\n      \"clearingSystemId\": \"ABC\",\n      \"memberId\": \"ABC\"\n    },\n    \"name\": \"ABC\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    }\n  },\n  \"beneficiary\": {\n    \"id\": \"12234ABC\",\n    \"isTrusted\": true,\n    \"creditorAgent\": {\n      \"bicFi\": \"GEBABEBB\",\n      \"clearingSystemMemberId\": {\n        \"clearingSystemId\": \"ABC\",\n        \"memberId\": \"ABC\"\n      },\n      \"name\": \"ABC\",\n      \"postalAddress\": {\n        \"country\": \"FR\",\n        \"addressLine\": [\n          \"18 rue de la DSP2\",\n          \"75008 PARIS\"\n        ]\n      }\n    },\n    \"creditor\": {\n      \"name\": \"myMerchant\",\n      \"postalAddress\": {\n        \"country\": \"FR\",\n        \"addressLine\": [\n          \"18 rue de la DSP2\",\n          \"75008 PARIS\"\n        ]\n      },\n      \"organisationId\": {\n        \"identification\": \"852126789\",\n        \"schemeName\": \"SIREN\",\n        \"issuer\": \"FR\"\n      }\n    },\n    \"creditorAccount\": {\n      \"iban\": \"BE22222222222222\",\n      \"others\": {\n        \"identification\": \"12FR5\",\n        \"schemeName\": \"COID\",\n        \"issuer\": \"ACPR\"\n      }\n    }\n  },\n  \"ultimateCreditor\": {\n    \"name\": \"myPreferedUltimateMerchant\",\n    \"postalAddress\": {\n      \"country\": \"FR\",\n      \"addressLine\": [\n        \"18 rue de la DSP2\",\n        \"75008 PARIS\"\n      ]\n    },\n    \"organisationId\": {\n      \"identification\": \"85212678900025\",\n      \"schemeName\": \"SIRET\",\n      \"issuer\": \"FR\"\n    }\n  },\n  \"purpose\": \"COMC\",\n  \"chargeBearer\": \"SLEV\",\n  \"paymentInformationStatus\": \"RJCT\",\n  \"statusReasonInformation\": \"MS03\",\n  \"fundsAvailability\": \"trueDAIL\",\n  \"booking\": true,\n  \"requestedExecutionDate\": \"2016-12-31T00:00:00.000+01:00\",\n  \"creditTransferTransaction\": [\n    {\n      \"paymentId\": {\n        \"resourceId\": \"123abc\",\n        \"instructionId\": \"MyInstrId\",\n        \"endToEndId\": \"MyEndToEndId\"\n      },\n      \"requestedExecutionDate\": \"2016-12-31T00:00:00.000+01:00\",\n      \"endDate\": \"MyEndToEndId\",\n      \"executionRule\": \"FWNG\",\n      \"frequency\": \"DAIL\",\n      \"instructedAmount\": {\n        \"currency\": \"EUR\",\n        \"amount\": \"124.35\"\n      },\n      \"id\": \"12234ABC\",\n      \"beneficiary\": {\n        \"isTrusted\": true,\n        \"creditorAgent\": {\n          \"bicFi\": \"GEBABEBB\",\n          \"clearingSystemMemberId\": {\n            \"clearingSystemId\": \"ABC\",\n            \"memberId\": \"ABC\"\n          },\n          \"name\": \"ABC\",\n          \"postalAddress\": {\n            \"country\": \"FR\",\n            \"addressLine\": [\n              \"18 rue de la DSP2\",\n              \"75008 PARIS\"\n            ]\n          }\n        },\n        \"creditor\": {\n          \"name\": \"myMerchant\",\n          \"postalAddress\": {\n            \"country\": \"FR\",\n            \"addressLine\": [\n              \"18 rue de la DSP2\",\n              \"75008 PARIS\"\n            ]\n          },\n          \"organisationId\": {\n            \"identification\": \"852126789\",\n            \"schemeName\": \"SIREN\",\n            \"issuer\": \"FR\"\n          }\n        },\n        \"creditorAccount\": {\n          \"iban\": \"BE22222222222222\",\n          \"others\": {\n            \"identification\": \"12FR5\",\n            \"schemeName\": \"COID\",\n            \"issuer\": \"ACPR\"\n          }\n        }\n      },\n      \"ultimateCreditor\": {\n        \"name\": \"MyPreferedPisp\",\n        \"postalAddress\": {\n          \"country\": \"FR\",\n          \"addressLine\": [\n            \"18 rue de la DSP2\",\n            \"75008 PARIS\"\n          ]\n        },\n        \"organisationId\": {\n          \"identification\": \"12FR5\",\n          \"schemeName\": \"COID\",\n          \"issuer\": \"ACPR\"\n        }\n      },\n      \"regulatoryReportingCodes\": [\n        \"123\"\n      ],\n      \"remittanceInformation\": {\n        \"structured\": [\n          {\n            \"creditorReferenceInformation\": {\n              \"type\": {\n                \"code\": \"SCOR\",\n                \"issuer\": \"BBA\"\n              },\n              \"reference\": \"123456789123\"\n            }\n          }\n        ]\n      },\n      \"transactionStatus\": \"RJCT\",\n      \"statusReasonInformation\": \"RR12\"\n    }\n  ],\n  \"supplementaryData\": {\n    \"acceptedAuthenticationApproach\": [\n      \"REDIRECT\",\n      \"DECOUPLED\"\n    ],\n    \"appliedAuthenticationApproach\": \"REDIRECT\",\n    \"scaHint\": \"noScaExemption\",\n    \"successfulReportUrl\": \"http://myPisp/PaymentSuccess\",\n    \"unsuccessfulReportUrl\": \"http://myPisp/PaymentFailure\"\n  }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/payment-requests/{{paymentRequestResourceId}}?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"payment-requests",
								"{{paymentRequestResourceId}}"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						},
						"description": "In order to get the cancellation url you need to put \"RJCT\" as value for \"paymentInformationStatus\" and \"transactionStatus\" in the payload"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CHECK AVAILABILITY OF FUNDS (CBPI)",
			"item": [
				{
					"name": "Step 1 - Authenticate - Required for CBPI APIs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5c12015-a0df-4ba5-a178-e5ed7c1c60bd",
								"exec": [
									"tests[\"Access token is present\"] = responseBody.has(\"access_token\");",
									"",
									"if (responseBody.has(\"access_token\")) {",
									"    var data = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"bearer_token\", data.data.access_token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{username}}",
									"description": "The username from the test data",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"description": "The matching password from the test data",
									"type": "text"
								},
								{
									"key": "next",
									"value": "",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "",
									"type": "text",
									"disabled": true
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_auth}}/authenticate?client_id={{client_id}}&brand={{brand}}",
							"host": [
								"{{sandbox_auth}}"
							],
							"path": [
								"authenticate"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 2 - Get authorization code - Required for CBPI APIs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e5a8a73-cc1f-44a4-b9f5-3f8beb8e4232",
								"exec": [
									"tests[\"Redirect is OK\"] = postman.getResponseHeader(\"location\")",
									"",
									"if (postman.getResponseHeader(\"location\")) {",
									"var loc = postman.getResponseHeader(\"location\").split('&')[0];",
									"postman.setEnvironmentVariable(\"authorization_code\", loc.split('=')[1])",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearer_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "redirect_uri",
									"value": "{{redirect_url}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "cbpi",
									"type": "text"
								},
								{
									"key": "response_type",
									"value": "code",
									"type": "text"
								},
								{
									"key": "accounts",
									"value": "{{from_account}}",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_auth}}/authorize?client_id={{client_id}}&state={{state}}&brand={{brand}}",
							"host": [
								"{{sandbox_auth}}"
							],
							"path": [
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "state",
									"value": "{{state}}"
								},
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 3 - Get Token - Required for CBPI APIs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc37f6b3-0f84-4199-aaaa-b126e2e11f79",
								"exec": [
									"tests[\"Access token is present\"] = responseBody.has(\"access_token\");",
									"tests[\"Refresh token is present\"] = responseBody.has(\"refresh_token\");",
									"",
									"if (responseBody.has(\"access_token\")) {",
									"    var data = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"access_token_authorization_grant\", data.access_token);",
									"}",
									"",
									"if (responseBody.has(\"refresh_token\")) {",
									"    var data = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"access_token_refresh_token\", data.refresh_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_url}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "cbpi",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{authorization_code}}",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_auth}}/token",
							"host": [
								"{{sandbox_auth}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment coverage check request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56eb4e7f-fc2c-4aa1-b34f-11c3e19045fa",
								"exec": [
									"pm.test(\"Response code is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{access_token_authorization_grant}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(required) http-signature of the request (cf. https://datatracker.ietf.org/doc/draft-cavage-http-signatures/) The keyId must specify the way to get the relevant qualified certificate. It is requested that this identifier is an URL aiming to provide the relevant Qualified Certificate.",
								"key": "Signature",
								"value": "<Base64(RSA-SHA256(signing string))>"
							},
							{
								"description": "(required) Correlation header to be set in a request and retrieved in the relevant response\n",
								"key": "X-Request-ID",
								"value": "<X-Request-ID>"
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Address",
								"value": "<PSU-IP-Address>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-IP-Port",
								"value": "<PSU-IP-Port>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-HTTP-Method",
								"value": "<PSU-HTTP-Method>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Date",
								"value": "<PSU-Date>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-GEO-Location",
								"value": "<PSU-GEO-Location>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-User-Agent",
								"value": "<PSU-User-Agent>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Referer",
								"value": "<PSU-Referer>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept",
								"value": "<PSU-Accept>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Charset",
								"value": "<PSU-Accept-Charset>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Encoding",
								"value": "<PSU-Accept-Encoding>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Accept-Language",
								"value": "<PSU-Accept-Language>",
								"disabled": true
							},
							{
								"description": "(optional)",
								"key": "PSU-Device-ID",
								"value": "<PSU-Device-ID>",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"paymentCoverageRequestId\": \"MyCoverage123456\",\n  \"instructedAmount\": {\n    \"currency\": \"EUR\",\n    \"amount\": \"20\"\n  },\n  \"accountId\": {\n  \t\"currency\": \"EUR\",\n    \"iban\": \"{{from_account}}\"\n  }\n}",
							"options": {}
						},
						"url": {
							"raw": "{{sandbox_gateway}}/psd2/v2/funds-confirmations?brand={{brand}}",
							"host": [
								"{{sandbox_gateway}}"
							],
							"path": [
								"psd2",
								"v2",
								"funds-confirmations"
							],
							"query": [
								{
									"key": "brand",
									"value": "{{brand}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}